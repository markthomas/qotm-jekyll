<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-09-05T19:18:52-04:00</updated><id>/feed.xml</id><title type="html">Quick Off The Mark</title><subtitle>Quick thoughts on my technology explorations.</subtitle><entry><title type="html">Introduction to Python vs. Ruby</title><link href="/pyvrb/2021/09/04/python-v-ruby.html" rel="alternate" type="text/html" title="Introduction to Python vs. Ruby" /><published>2021-09-04T00:00:00-04:00</published><updated>2021-09-04T00:00:00-04:00</updated><id>/pyvrb/2021/09/04/python-v-ruby</id><content type="html" xml:base="/pyvrb/2021/09/04/python-v-ruby.html">&lt;p&gt;Many years ago I worked for an organization that was largely a Java shop but my particular group had burgeoning pythonistas and rubyists. One interesting thing was that there was no overlap—the pythonistas didn’t know Ruby and the Rubyists didn’t know Python. I was squarely in the Ruby camp at the time. One of my co-workers had an internal blog espousing the virtues of python by way of showing little snippets of code with exclamations like, “isn’t this the simplest, easiest-to-read code you’ve ever seen?”&lt;/p&gt;

&lt;p&gt;This was, of course, a gauntlet thrown. I set up a blog which would mirror his, post for post, showing the python snippet and the equivalent in Ruby. Often the Ruby code would be both more concise and read more like English. This turned into a friendly competition and my colleague started specifially choosing snippets in which Python really shone. So we started asking our Java friends to pick a winner. I would post that on the blog.&lt;/p&gt;

&lt;p&gt;The end result was that I learned a lot of Python idioms, and likewise my colleague developed an appreciation for Ruby. I got feedback from developers just learning Ruby or Python that my blog was informative and fun to follow.&lt;/p&gt;

&lt;p&gt;So this blog category aims to resurrect that friendly competitive spirit. Hopefully it will be interesting if not informative, especially if you’re learning one of these fine languages.&lt;/p&gt;</content><author><name></name></author><category term="pyvrb" /><summary type="html">Many years ago I worked for an organization that was largely a Java shop but my particular group had burgeoning pythonistas and rubyists. One interesting thing was that there was no overlap—the pythonistas didn’t know Ruby and the Rubyists didn’t know Python. I was squarely in the Ruby camp at the time. One of my co-workers had an internal blog espousing the virtues of python by way of showing little snippets of code with exclamations like, “isn’t this the simplest, easiest-to-read code you’ve ever seen?”</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2021/08/30/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-08-30T18:34:31-04:00</published><updated>2021-08-30T18:34:31-04:00</updated><id>/jekyll/update/2021/08/30/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2021/08/30/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Tom&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &apos;Hi, Tom&apos; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>